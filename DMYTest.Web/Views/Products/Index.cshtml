@model  IEnumerable<DMYTest.Data.Models.Product>

@helper Truncate(string input, int length)
{
    if (input.Length <= length)
    {
        @input
    }
    else
    {
        @input.Substring(0, length)<text>...</text>
    }
}
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <thead>
        <tr>
            <th> </th>
            <th scope="col">ID</th>

            <th scope="col">Category ID</th>
            <th scope="col">Description</th>
            <th scope="col">Stock Count</th>
            <th scope="col">Price</th>
            
            <th scope="col">Name</th>

        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ProductID }) |

                    @Html.ActionLink("Delete", "Delete", new { id = item.ProductID })
                </td>
                <th scope="row">
                    @Html.DisplayFor(modelItem => item.ProductID)
                </th>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryID)
                </td>
                <td>
                    @Truncate(item.Description ,20)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Stock)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitPrice)
                </td>
                <td>
                    @Truncate(item.ProductName,20)
                </td>

            </tr>
        }
    </tbody>
</table>
